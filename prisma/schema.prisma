// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Tag {
  id    String @id @default(uuid()) // ID unique du tag
  name  String @unique // Nom du tag, par exemple "Peinture", "Plomberie", etc.
  tasks Task[] @relation("TaskTags")
}

model Task {
  id          String @id @default(uuid())
  content     String
  priority    String
  price       String
  discipline  String
  description String
  columnId    String
  index       Int
  column      Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  tags        Tag[]  @relation("TaskTags") // Relation avec les tags via une table de jointure
}

model Building {
  id            String   @id @default(uuid())
  buildingName  String   @unique
  buildingGroup String
  subgroup      String
  columns       Column[]
}

model Column {
  id         String   @id @default(uuid())
  title      String
  year       String
  buildingId String
  building   Building @relation(fields: [buildingId], references: [id], onDelete: Cascade)
  tasks      Task[] // Chaque colonne a ses propres t√¢ches
}

model Multiplier {
  id        String @id @default(uuid())
  order     Int    // Ordre d'affichage du multiplicateur
  name      String @unique // Nom du multiplicateur
  value     Float  // Valeur du multiplicateur
}